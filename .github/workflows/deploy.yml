name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allow manual triggering
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Setup build directory
        run: |
          # Create build directory
          mkdir -p _site/games

          # Copy main files
          cp index.html _site/
          cp style.css _site/
          cp script.js _site/

          # Copy the manifest file (still needed by the main script.js)
          if [ -f "games/manifest.json" ]; then
            cp games/manifest.json _site/games/
          else
            echo "Warning: games/manifest.json not found. The game list might not load correctly."
            # Don't exit, allow deployment but with potential issues
          fi

          # Copy all game directories found in the games/ folder
          echo "Copying all game directories..."
          for game_dir in $(find games -mindepth 1 -maxdepth 1 -type d); do
            game_id=$(basename "$game_dir")
            echo "Copying game: $game_id"
            mkdir -p _site/games/$game_id
            # Copy contents of the game directory, excluding the manifest itself if it's at the top level
            find "$game_dir" -mindepth 1 -maxdepth 1 -exec cp -r {} _site/games/$game_id/ \;
          done

          # Copy LICENSE file to _site if it exists
          if [ -f "LICENSE" ]; then
            cp LICENSE _site/
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './_site'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
